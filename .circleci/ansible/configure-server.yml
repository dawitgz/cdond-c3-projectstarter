---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
  - name: "wait 600 seconds for target connection to become reachable/usable."
    # Your code here
    pause: 
      seconds: 100

  - debug:
      var=python_version.stdout_lines
  # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"  
    # Add more env vars here
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  tasks:
  - name: Copy Environment variables to a .env on server so it persists for migration workflow
    shell: |
      echo $TYPEORM_CONNECTION
      echo $TYPEORM_ENTITIES
      echo $TYPEORM_HOST

  - name: Check installed python version
    shell: python3 -V 2>&1
    register: python_version
    
  roles:
    # Your code here
    - configure-server
    - install-prometheus